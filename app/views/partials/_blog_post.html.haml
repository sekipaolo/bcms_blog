%style
  :sass
    .blog_post.first
      h2, h2 a
        font: normal 30px/28px 'arial black', arial, sans-serif !important
      border-bottom: 1px solid #ccc

    .blog_post
      border: 0px solid gray
      margin-bottom: 20px

      h2
        margin-bottom: 0
      h2, h2 a
        font: normal 20px/23px 'arial black', arial, sans-serif !important
        text-decoration: none !important
      h2 a:hover
        text-decoration: underline !important

      .image
        float: left
        border: 1px solid #ccc
        margin: 10px
        margin-top: 0

      .date
        color: #666
      .read_more
        font-weight: bold

      .comment + .comment
        border-top: 1px dashed #ccc

    .clear
      clear: both

:ruby
  # _counter is defined only if we pass :collection to the partial
  if defined?(blog_post_counter)
    showing_individual_post = false
  else
    showing_individual_post = true
    blog_post_counter = 0
  end

  if blog_post_counter == 0
    max_width = 250
    css_class = 'first'
  else
    max_width = 75
    css_class = ''
  end

.blog_post.clear{:id => "blog_post_#{blog_post.id}", :class => css_class}
  - if blog_post.attachment
    -# .image= image_tag_with_max_size blog_post.attachment.file_path, blog_post.attachment.full_file_location, :width => max_width
    .image= image_tag blog_post.attachment.file_path

  %h2= link_to h(blog_post.name), href = _blog_post_path(blog_post)

  .date= blog_post.published_at.to_s(:long)

  .body
    - if showing_individual_post or blog_post.summary.blank?
      = blog_post.body.html_safe
    - else
      = blog_post.summary
      %p.read_more= link_to 'Read More Â»', href

  - if showing_individual_post || blog_post_counter == 0
    .meta
      - unless blog_post.category_id.blank?
        Posted in #{link_to h(blog_post.category_name), _blog_path(blog_post.blog, 'posts_in_category', :category => blog_post.category_name)}
        %strong |
      - if blog_post.tags.any?
        Tags:
        %span.tags
          = blog_post.tags.map{|t| link_to(h(t.name), _blog_path(blog_post.blog, 'posts_with_tag', :tag => t.name)) }.join(", ")
        %strong |
        = link_to h(pluralize(blog_post.comments_count, "Comment")), "#{_blog_post_path(blog_post)}#comments"
  %br.clear/

  - comments = blog_post.comments.reject(&:new_record?)
  - if showing_individual_post and comments.any?
    %h2 Comments
    - comments.each_with_index do |comment, i|
      %div{:class => "comment #{'first' if i == 0}"}
        = h comment.body
        %p
          \&mdash;#{comment.url.present? ? link_to(h(comment.author), comment.url) : h(comment.author)}

